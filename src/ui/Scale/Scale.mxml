<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/halo"
			   xmlns:manageableButton="ui.manageableButton.*">
    <fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Text;
			import mx.events.FlexEvent;
			
			import spark.events.IndexChangeEvent;
			
			protected function overControlButtonsHandler(event:MouseEvent):void
			{
				changeButtonState("over");				
			}
			private function changeButtonState(state2Change:String = ""):void
			{
				minimizeBtn.currentButtonState = maximizeBtn.currentButtonState = state2Change;
				minimizeBtn.invalidateSkinState();
				maximizeBtn.invalidateSkinState();
			}
			
			protected function outControlButtonsHandler(event:MouseEvent):void
			{
				changeButtonState();
			}
			
			protected function downControlButtonsHandler(event:MouseEvent):void
			{
				var button:ManageableButton = event.currentTarget as ManageableButton;
				button.currentButtonState = "";
				button.invalidateSkinState();
				if (!minimizeBtn.currentButtonState)
				{	
					zoomSlider.value = zoomSlider.value - 5;
				}
				if (!maximizeBtn.currentButtonState)
				{
					zoomSlider.value = zoomSlider.value + 5;
				}
			}
		]]>
	</fx:Script>
	<fx:Style>
		.iconButtons {
			skinClass: ClassReference("ui.iconButton.IconButtonSkin");
		}
		#minimizeBtn {
			icon2Display: Embed('/assets/icons/tb/minimize.png');
			icon2DisplayOver: Embed('/assets/icons/tb/minimize.png');
			icon2DisplayDown: Embed('/assets/icons/tb/minimize.png');
		}
		#maximizeBtn {
			icon2Display: Embed('/assets/icons/tb/maximize.png');
			icon2DisplayOver: Embed('/assets/icons/tb/maximize.png');
			icon2DisplayDown: Embed('/assets/icons/tb/maximize.png');
		}
	</fx:Style>
	<s:HGroup paddingLeft="4" paddingTop="10" gap="110">
		<manageableButton:ManageableButton id="minimizeBtn" styleName="iconButtons" mouseOver="overControlButtonsHandler(event)"
						mouseOut="outControlButtonsHandler(event)" mouseDown="downControlButtonsHandler(event)"/>
		<manageableButton:ManageableButton id="maximizeBtn" styleName="iconButtons" mouseOver="overControlButtonsHandler(event)"
						mouseOut="outControlButtonsHandler(event)" mouseDown="downControlButtonsHandler(event)"/>
	</s:HGroup>
	<s:HGroup width="100" height="100%" paddingTop="10" paddingLeft="20" gap="20">
		<s:HSlider id="zoomSlider" value="95" skinClass="ui.nsSlider.NSSliderSkin" width="100" minimum="20" maximum="400"/>
		<s:Label text="{Math.round(zoomSlider.value) + '%'}" fontSize="11"/>
	</s:HGroup>
</s:Group>